/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

GtkWidget*
create_cmveditor (void)
{
  GtkWidget *cmveditor;
  GtkWidget *vbox1;
  GtkWidget *vbox4;
  GtkWidget *hbox6;
  GtkWidget *label11;
  GtkWidget *paramsfile;
  GtkWidget *vbox2;
  GtkWidget *hbuttonbox5;
  GtkWidget *pload_button;
  GtkWidget *psave_button;
  GtkWidget *psaveas_button;
  GtkWidget *table4;
  GtkWidget *grab_single_button;
  GtkWidget *saveimage_button;
  GtkWidget *rawvision_button;
  GtkWidget *grab_button;
  GtkWidget *hseparator2;
  GtkWidget *vbox5;
  GtkWidget *table3;
  GSList *table3_group = NULL;
  GtkWidget *video1button;
  GtkWidget *applybutton;
  GtkWidget *video0button;
  GtkWidget *hbox2;
  GtkWidget *label4;
  GtkWidget *colorfile;
  GtkWidget *hbuttonbox1;
  GtkWidget *loadbutton;
  GtkWidget *savebutton;
  GtkWidget *saveasbutton;
  GtkWidget *statusbar;
  GtkAccelGroup *accel_group;

  accel_group = gtk_accel_group_new ();

  cmveditor = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_name (cmveditor, "cmveditor");
  gtk_object_set_data (GTK_OBJECT (cmveditor), "cmveditor", cmveditor);
  gtk_window_set_title (GTK_WINDOW (cmveditor), "CMVeditor");

  vbox1 = gtk_vbox_new (FALSE, 0);
  gtk_widget_set_name (vbox1, "vbox1");
  gtk_widget_ref (vbox1);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "vbox1", vbox1,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (vbox1);
  gtk_container_add (GTK_CONTAINER (cmveditor), vbox1);

  vbox4 = gtk_vbox_new (FALSE, 0);
  gtk_widget_set_name (vbox4, "vbox4");
  gtk_widget_ref (vbox4);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "vbox4", vbox4,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (vbox4);
  gtk_box_pack_start (GTK_BOX (vbox1), vbox4, FALSE, TRUE, 4);

  hbox6 = gtk_hbox_new (FALSE, 0);
  gtk_widget_set_name (hbox6, "hbox6");
  gtk_widget_ref (hbox6);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "hbox6", hbox6,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hbox6);
  gtk_box_pack_start (GTK_BOX (vbox4), hbox6, FALSE, FALSE, 0);

  label11 = gtk_label_new ("Params File");
  gtk_widget_set_name (label11, "label11");
  gtk_widget_ref (label11);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "label11", label11,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (label11);
  gtk_box_pack_start (GTK_BOX (hbox6), label11, FALSE, FALSE, 0);
  gtk_misc_set_padding (GTK_MISC (label11), 5, 0);

  paramsfile = gtk_entry_new ();
  gtk_widget_set_name (paramsfile, "paramsfile");
  gtk_widget_ref (paramsfile);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "paramsfile", paramsfile,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (paramsfile);
  gtk_box_pack_start (GTK_BOX (hbox6), paramsfile, TRUE, TRUE, 0);
  gtk_entry_set_text (GTK_ENTRY (paramsfile), "params-low.txt");

  vbox2 = gtk_vbox_new (FALSE, 0);
  gtk_widget_set_name (vbox2, "vbox2");
  gtk_widget_ref (vbox2);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "vbox2", vbox2,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (vbox2);
  gtk_box_pack_start (GTK_BOX (vbox1), vbox2, FALSE, FALSE, 0);

  hbuttonbox5 = gtk_hbutton_box_new ();
  gtk_widget_set_name (hbuttonbox5, "hbuttonbox5");
  gtk_widget_ref (hbuttonbox5);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "hbuttonbox5", hbuttonbox5,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hbuttonbox5);
  gtk_box_pack_start (GTK_BOX (vbox2), hbuttonbox5, FALSE, FALSE, 0);

  pload_button = gtk_button_new_with_label ("Load...");
  gtk_widget_set_name (pload_button, "pload_button");
  gtk_widget_ref (pload_button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "pload_button", pload_button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (pload_button);
  gtk_container_add (GTK_CONTAINER (hbuttonbox5), pload_button);
  GTK_WIDGET_SET_FLAGS (pload_button, GTK_CAN_DEFAULT);

  psave_button = gtk_button_new_with_label ("Save");
  gtk_widget_set_name (psave_button, "psave_button");
  gtk_widget_ref (psave_button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "psave_button", psave_button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (psave_button);
  gtk_container_add (GTK_CONTAINER (hbuttonbox5), psave_button);
  GTK_WIDGET_SET_FLAGS (psave_button, GTK_CAN_DEFAULT);

  psaveas_button = gtk_button_new_with_label ("Save As...");
  gtk_widget_set_name (psaveas_button, "psaveas_button");
  gtk_widget_ref (psaveas_button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "psaveas_button", psaveas_button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (psaveas_button);
  gtk_container_add (GTK_CONTAINER (hbuttonbox5), psaveas_button);
  GTK_WIDGET_SET_FLAGS (psaveas_button, GTK_CAN_DEFAULT);

  table4 = gtk_table_new (2, 2, FALSE);
  gtk_widget_set_name (table4, "table4");
  gtk_widget_ref (table4);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "table4", table4,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (table4);
  gtk_box_pack_start (GTK_BOX (vbox2), table4, FALSE, FALSE, 0);

  grab_single_button = gtk_button_new_with_label ("Grab Single");
  gtk_widget_set_name (grab_single_button, "grab_single_button");
  gtk_widget_ref (grab_single_button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "grab_single_button", grab_single_button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (grab_single_button);
  gtk_table_attach (GTK_TABLE (table4), grab_single_button, 1, 2, 0, 1,
                    (GtkAttachOptions) (GTK_FILL),
                    (GtkAttachOptions) (0), 0, 0);

  saveimage_button = gtk_button_new_with_label ("Save Image...");
  gtk_widget_set_name (saveimage_button, "saveimage_button");
  gtk_widget_ref (saveimage_button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "saveimage_button", saveimage_button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (saveimage_button);
  gtk_table_attach (GTK_TABLE (table4), saveimage_button, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND), 0, 0);

  rawvision_button = gtk_check_button_new_with_label ("Raw vision output");
  gtk_widget_set_name (rawvision_button, "rawvision_button");
  gtk_widget_ref (rawvision_button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "rawvision_button", rawvision_button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (rawvision_button);
  gtk_table_attach (GTK_TABLE (table4), rawvision_button, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND), 0, 0);
  gtk_widget_add_accelerator (rawvision_button, "toggled", accel_group,
                              GDK_c, 0,
                              GTK_ACCEL_VISIBLE);

  grab_button = gtk_button_new_with_label ("Grab");
  gtk_widget_set_name (grab_button, "grab_button");
  gtk_widget_ref (grab_button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "grab_button", grab_button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (grab_button);
  gtk_table_attach (GTK_TABLE (table4), grab_button, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND), 0, 0);

  hseparator2 = gtk_hseparator_new ();
  gtk_widget_set_name (hseparator2, "hseparator2");
  gtk_widget_ref (hseparator2);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "hseparator2", hseparator2,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hseparator2);
  gtk_box_pack_start (GTK_BOX (vbox1), hseparator2, FALSE, FALSE, 0);

  vbox5 = gtk_vbox_new (FALSE, 0);
  gtk_widget_set_name (vbox5, "vbox5");
  gtk_widget_ref (vbox5);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "vbox5", vbox5,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (vbox5);
  gtk_box_pack_start (GTK_BOX (vbox1), vbox5, FALSE, FALSE, 0);

  table3 = gtk_table_new (2, 2, FALSE);
  gtk_widget_set_name (table3, "table3");
  gtk_widget_ref (table3);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "table3", table3,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (table3);
  gtk_box_pack_start (GTK_BOX (vbox5), table3, TRUE, TRUE, 0);

  video1button = gtk_radio_button_new_with_label (table3_group, "Video Channel 1");
  table3_group = gtk_radio_button_group (GTK_RADIO_BUTTON (video1button));
  gtk_widget_set_name (video1button, "video1button");
  gtk_widget_ref (video1button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "video1button", video1button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (video1button);
  gtk_table_attach (GTK_TABLE (table3), video1button, 0, 1, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND), 0, 0);

  applybutton = gtk_button_new_with_label ("Apply...");
  gtk_widget_set_name (applybutton, "applybutton");
  gtk_widget_ref (applybutton);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "applybutton", applybutton,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (applybutton);
  gtk_table_attach (GTK_TABLE (table3), applybutton, 1, 2, 1, 2,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND), 0, 0);

  video0button = gtk_radio_button_new_with_label (table3_group, "Video Channel 0");
  table3_group = gtk_radio_button_group (GTK_RADIO_BUTTON (video0button));
  gtk_widget_set_name (video0button, "video0button");
  gtk_widget_ref (video0button);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "video0button", video0button,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (video0button);
  gtk_table_attach (GTK_TABLE (table3), video0button, 0, 1, 0, 1,
                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
                    (GtkAttachOptions) (GTK_EXPAND), 0, 0);

  hbox2 = gtk_hbox_new (FALSE, 0);
  gtk_widget_set_name (hbox2, "hbox2");
  gtk_widget_ref (hbox2);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "hbox2", hbox2,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hbox2);
  gtk_box_pack_start (GTK_BOX (vbox5), hbox2, TRUE, TRUE, 0);

  label4 = gtk_label_new ("Color File");
  gtk_widget_set_name (label4, "label4");
  gtk_widget_ref (label4);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "label4", label4,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (label4);
  gtk_box_pack_start (GTK_BOX (hbox2), label4, FALSE, FALSE, 0);
  gtk_misc_set_padding (GTK_MISC (label4), 5, 0);

  colorfile = gtk_entry_new ();
  gtk_widget_set_name (colorfile, "colorfile");
  gtk_widget_ref (colorfile);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "colorfile", colorfile,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (colorfile);
  gtk_box_pack_start (GTK_BOX (hbox2), colorfile, TRUE, TRUE, 0);
  gtk_entry_set_text (GTK_ENTRY (colorfile), "thresh.tmap");

  hbuttonbox1 = gtk_hbutton_box_new ();
  gtk_widget_set_name (hbuttonbox1, "hbuttonbox1");
  gtk_widget_ref (hbuttonbox1);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "hbuttonbox1", hbuttonbox1,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hbuttonbox1);
  gtk_box_pack_start (GTK_BOX (vbox1), hbuttonbox1, FALSE, FALSE, 0);
  gtk_button_box_set_spacing (GTK_BUTTON_BOX (hbuttonbox1), 0);
  gtk_button_box_set_child_ipadding (GTK_BUTTON_BOX (hbuttonbox1), 0, 0);

  loadbutton = gtk_button_new_with_label ("Load...");
  gtk_widget_set_name (loadbutton, "loadbutton");
  gtk_widget_ref (loadbutton);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "loadbutton", loadbutton,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (loadbutton);
  gtk_container_add (GTK_CONTAINER (hbuttonbox1), loadbutton);
  GTK_WIDGET_SET_FLAGS (loadbutton, GTK_CAN_DEFAULT);

  savebutton = gtk_button_new_with_label ("Save");
  gtk_widget_set_name (savebutton, "savebutton");
  gtk_widget_ref (savebutton);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "savebutton", savebutton,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (savebutton);
  gtk_container_add (GTK_CONTAINER (hbuttonbox1), savebutton);
  GTK_WIDGET_SET_FLAGS (savebutton, GTK_CAN_DEFAULT);
  gtk_widget_add_accelerator (savebutton, "clicked", accel_group,
                              GDK_s, 0,
                              GTK_ACCEL_VISIBLE);

  saveasbutton = gtk_button_new_with_label ("Save As...");
  gtk_widget_set_name (saveasbutton, "saveasbutton");
  gtk_widget_ref (saveasbutton);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "saveasbutton", saveasbutton,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (saveasbutton);
  gtk_container_add (GTK_CONTAINER (hbuttonbox1), saveasbutton);
  GTK_WIDGET_SET_FLAGS (saveasbutton, GTK_CAN_DEFAULT);

  statusbar = gtk_statusbar_new ();
  gtk_widget_set_name (statusbar, "statusbar");
  gtk_widget_ref (statusbar);
  gtk_object_set_data_full (GTK_OBJECT (cmveditor), "statusbar", statusbar,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (statusbar);
  gtk_box_pack_start (GTK_BOX (vbox1), statusbar, FALSE, FALSE, 0);

  gtk_signal_connect (GTK_OBJECT (cmveditor), "destroy",
                      GTK_SIGNAL_FUNC (OnQuit),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (cmveditor), "key_press_event",
                      GTK_SIGNAL_FUNC (OnKeyPress),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (paramsfile), "activate",
                      GTK_SIGNAL_FUNC (OnParamsActivate),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (pload_button), "clicked",
                      GTK_SIGNAL_FUNC (OnParamsLoad),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (psave_button), "clicked",
                      GTK_SIGNAL_FUNC (OnParamsSave),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (psaveas_button), "clicked",
                      GTK_SIGNAL_FUNC (OnParamsSaveAs),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (grab_single_button), "clicked",
                      GTK_SIGNAL_FUNC (OnGrabClicked),
                      (gpointer) 0);
  gtk_signal_connect (GTK_OBJECT (saveimage_button), "clicked",
                      GTK_SIGNAL_FUNC (OnSaveImageClicked),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (rawvision_button), "toggled",
                      GTK_SIGNAL_FUNC (OnRawToggle),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (grab_button), "clicked",
                      GTK_SIGNAL_FUNC (OnGrabClicked),
                      (gpointer) 1);
  gtk_signal_connect (GTK_OBJECT (video1button), "toggled",
                      GTK_SIGNAL_FUNC (OnVideoToggle),
                      (gpointer) 1);
  gtk_signal_connect (GTK_OBJECT (applybutton), "clicked",
                      GTK_SIGNAL_FUNC (OnChannelApplyClicked),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (video0button), "toggled",
                      GTK_SIGNAL_FUNC (OnVideoToggle),
                      0);
  gtk_signal_connect (GTK_OBJECT (colorfile), "activate",
                      GTK_SIGNAL_FUNC (OnColorFileActivate),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (loadbutton), "clicked",
                      GTK_SIGNAL_FUNC (OnColorFileLoad),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (savebutton), "clicked",
                      GTK_SIGNAL_FUNC (OnColorFileSave),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (saveasbutton), "clicked",
                      GTK_SIGNAL_FUNC (OnColorFileSaveAs),
                      NULL);

  gtk_window_add_accel_group (GTK_WINDOW (cmveditor), accel_group);

  return cmveditor;
}

GtkWidget*
create_colormapwin (void)
{
  GtkWidget *colormapwin;
  GtkWidget *vbox6;
  GtkWidget *aspectframe1;
  GtkWidget *cmap_darea;
  GtkWidget *hbox3;
  GtkWidget *vbox7;
  GtkWidget *label9;
  GtkWidget *hbuttonbox3;
  GtkWidget *downbutton;
  GtkWidget *upbutton;
  GtkWidget *vbox8;
  GtkWidget *label8;
  GtkWidget *hbuttonbox4;
  GtkWidget *button1;
  GtkWidget *button2;
  GtkWidget *colorstatusbar;
  GtkAccelGroup *accel_group;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  accel_group = gtk_accel_group_new ();

  colormapwin = gtk_window_new (GTK_WINDOW_DIALOG);
  gtk_widget_set_name (colormapwin, "colormapwin");
  gtk_object_set_data (GTK_OBJECT (colormapwin), "colormapwin", colormapwin);
  gtk_window_set_title (GTK_WINDOW (colormapwin), "Color Map");

  vbox6 = gtk_vbox_new (FALSE, 0);
  gtk_widget_set_name (vbox6, "vbox6");
  gtk_widget_ref (vbox6);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "vbox6", vbox6,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (vbox6);
  gtk_container_add (GTK_CONTAINER (colormapwin), vbox6);

  aspectframe1 = gtk_aspect_frame_new (NULL, 0.5, 0.5, 10, TRUE);
  gtk_widget_set_name (aspectframe1, "aspectframe1");
  gtk_widget_ref (aspectframe1);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "aspectframe1", aspectframe1,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (aspectframe1);
  gtk_box_pack_start (GTK_BOX (vbox6), aspectframe1, TRUE, TRUE, 0);

  cmap_darea = gtk_drawing_area_new ();
  gtk_widget_set_name (cmap_darea, "cmap_darea");
  gtk_widget_ref (cmap_darea);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "cmap_darea", cmap_darea,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (cmap_darea);
  gtk_container_add (GTK_CONTAINER (aspectframe1), cmap_darea);
  gtk_widget_set_usize (cmap_darea, 200, 200);
  gtk_widget_set_events (cmap_darea, GDK_BUTTON1_MOTION_MASK | GDK_BUTTON_PRESS_MASK);

  hbox3 = gtk_hbox_new (FALSE, 0);
  gtk_widget_set_name (hbox3, "hbox3");
  gtk_widget_ref (hbox3);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "hbox3", hbox3,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hbox3);
  gtk_box_pack_start (GTK_BOX (vbox6), hbox3, FALSE, FALSE, 0);

  vbox7 = gtk_vbox_new (FALSE, 0);
  gtk_widget_set_name (vbox7, "vbox7");
  gtk_widget_ref (vbox7);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "vbox7", vbox7,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (vbox7);
  gtk_box_pack_start (GTK_BOX (hbox3), vbox7, TRUE, TRUE, 0);

  label9 = gtk_label_new ("Intensity Level");
  gtk_widget_set_name (label9, "label9");
  gtk_widget_ref (label9);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "label9", label9,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (label9);
  gtk_box_pack_start (GTK_BOX (vbox7), label9, FALSE, FALSE, 0);

  hbuttonbox3 = gtk_hbutton_box_new ();
  gtk_widget_set_name (hbuttonbox3, "hbuttonbox3");
  gtk_widget_ref (hbuttonbox3);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "hbuttonbox3", hbuttonbox3,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hbuttonbox3);
  gtk_box_pack_start (GTK_BOX (vbox7), hbuttonbox3, TRUE, TRUE, 0);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (hbuttonbox3), GTK_BUTTONBOX_SPREAD);
  gtk_button_box_set_spacing (GTK_BUTTON_BOX (hbuttonbox3), 0);
  gtk_button_box_set_child_ipadding (GTK_BUTTON_BOX (hbuttonbox3), 0, 0);

  downbutton = gtk_button_new_with_label ("<");
  gtk_widget_set_name (downbutton, "downbutton");
  gtk_widget_ref (downbutton);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "downbutton", downbutton,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (downbutton);
  gtk_container_add (GTK_CONTAINER (hbuttonbox3), downbutton);
  GTK_WIDGET_SET_FLAGS (downbutton, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, downbutton, "decrease the displayed intensity level", NULL);
  gtk_widget_add_accelerator (downbutton, "clicked", accel_group,
                              GDK_End, 0,
                              GTK_ACCEL_VISIBLE);

  upbutton = gtk_button_new_with_label (">");
  gtk_widget_set_name (upbutton, "upbutton");
  gtk_widget_ref (upbutton);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "upbutton", upbutton,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (upbutton);
  gtk_container_add (GTK_CONTAINER (hbuttonbox3), upbutton);
  GTK_WIDGET_SET_FLAGS (upbutton, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, upbutton, "Increase the displayed intensity level", NULL);
  gtk_widget_add_accelerator (upbutton, "clicked", accel_group,
                              GDK_Home, 0,
                              GTK_ACCEL_VISIBLE);

  vbox8 = gtk_vbox_new (FALSE, 0);
  gtk_widget_set_name (vbox8, "vbox8");
  gtk_widget_ref (vbox8);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "vbox8", vbox8,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (vbox8);
  gtk_box_pack_start (GTK_BOX (hbox3), vbox8, TRUE, TRUE, 0);

  label8 = gtk_label_new ("Color ID");
  gtk_widget_set_name (label8, "label8");
  gtk_widget_ref (label8);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "label8", label8,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (label8);
  gtk_box_pack_start (GTK_BOX (vbox8), label8, FALSE, FALSE, 0);

  hbuttonbox4 = gtk_hbutton_box_new ();
  gtk_widget_set_name (hbuttonbox4, "hbuttonbox4");
  gtk_widget_ref (hbuttonbox4);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "hbuttonbox4", hbuttonbox4,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (hbuttonbox4);
  gtk_box_pack_start (GTK_BOX (vbox8), hbuttonbox4, TRUE, TRUE, 0);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (hbuttonbox4), GTK_BUTTONBOX_SPREAD);
  gtk_button_box_set_spacing (GTK_BUTTON_BOX (hbuttonbox4), 0);
  gtk_button_box_set_child_ipadding (GTK_BUTTON_BOX (hbuttonbox4), 0, 0);

  button1 = gtk_button_new_with_label ("<");
  gtk_widget_set_name (button1, "button1");
  gtk_widget_ref (button1);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "button1", button1,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (button1);
  gtk_container_add (GTK_CONTAINER (hbuttonbox4), button1);
  GTK_WIDGET_SET_FLAGS (button1, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, button1, "previous color id", NULL);
  gtk_widget_add_accelerator (button1, "clicked", accel_group,
                              GDK_Page_Down, 0,
                              GTK_ACCEL_VISIBLE);

  button2 = gtk_button_new_with_label (">");
  gtk_widget_set_name (button2, "button2");
  gtk_widget_ref (button2);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "button2", button2,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (button2);
  gtk_container_add (GTK_CONTAINER (hbuttonbox4), button2);
  GTK_WIDGET_SET_FLAGS (button2, GTK_CAN_DEFAULT);
  gtk_tooltips_set_tip (tooltips, button2, "next color id", NULL);
  gtk_widget_add_accelerator (button2, "clicked", accel_group,
                              GDK_Page_Up, 0,
                              GTK_ACCEL_VISIBLE);

  colorstatusbar = gtk_statusbar_new ();
  gtk_widget_set_name (colorstatusbar, "colorstatusbar");
  gtk_widget_ref (colorstatusbar);
  gtk_object_set_data_full (GTK_OBJECT (colormapwin), "colorstatusbar", colorstatusbar,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (colorstatusbar);
  gtk_box_pack_start (GTK_BOX (vbox6), colorstatusbar, FALSE, FALSE, 0);

  gtk_signal_connect (GTK_OBJECT (colormapwin), "destroy",
                      GTK_SIGNAL_FUNC (OnQuit),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (colormapwin), "key_press_event",
                      GTK_SIGNAL_FUNC (OnKeyPress),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (cmap_darea), "configure_event",
                      GTK_SIGNAL_FUNC (OnCMapConfigure),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (cmap_darea), "button_press_event",
                      GTK_SIGNAL_FUNC (OnCMapButtonPress),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (cmap_darea), "motion_notify_event",
                      GTK_SIGNAL_FUNC (OnCMapMotion),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (cmap_darea), "expose_event",
                      GTK_SIGNAL_FUNC (OnCMapExpose),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (downbutton), "clicked",
                      GTK_SIGNAL_FUNC (OnColorIDButton),
                      (gpointer) -1);
  gtk_signal_connect (GTK_OBJECT (upbutton), "clicked",
                      GTK_SIGNAL_FUNC (OnColorIDButton),
                      (gpointer) 1);
  gtk_signal_connect (GTK_OBJECT (button1), "clicked",
                      GTK_SIGNAL_FUNC (OnCMapIntensityClicked),
                      GINT_TO_POINTER(-1));
  gtk_signal_connect (GTK_OBJECT (button2), "clicked",
                      GTK_SIGNAL_FUNC (OnCMapIntensityClicked),
                      GINT_TO_POINTER(1));

  gtk_object_set_data (GTK_OBJECT (colormapwin), "tooltips", tooltips);

  gtk_window_add_accel_group (GTK_WINDOW (colormapwin), accel_group);

  return colormapwin;
}

GtkWidget*
create_display (void)
{
  GtkWidget *display;
  GtkWidget *image_area;

  display = gtk_window_new (GTK_WINDOW_DIALOG);
  gtk_widget_set_name (display, "display");
  gtk_object_set_data (GTK_OBJECT (display), "display", display);
  gtk_window_set_title (GTK_WINDOW (display), "Display Window");

  image_area = gtk_drawing_area_new ();
  gtk_widget_set_name (image_area, "image_area");
  gtk_widget_ref (image_area);
  gtk_object_set_data_full (GTK_OBJECT (display), "image_area", image_area,
                            (GtkDestroyNotify) gtk_widget_unref);
  gtk_widget_show (image_area);
  gtk_container_add (GTK_CONTAINER (display), image_area);
  gtk_widget_set_events (image_area, GDK_POINTER_MOTION_MASK | GDK_BUTTON_MOTION_MASK | GDK_BUTTON1_MOTION_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK | GDK_KEY_PRESS_MASK);

  gtk_signal_connect (GTK_OBJECT (display), "destroy",
                      GTK_SIGNAL_FUNC (OnQuit),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (display), "key_press_event",
                      GTK_SIGNAL_FUNC (OnKeyPress),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (image_area), "button_press_event",
                      GTK_SIGNAL_FUNC (OnImageButtonPress),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (image_area), "configure_event",
                      GTK_SIGNAL_FUNC (OnImageConfigure),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (image_area), "expose_event",
                      GTK_SIGNAL_FUNC (OnImageExpose),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (image_area), "motion_notify_event",
                      GTK_SIGNAL_FUNC (on_image_area_motion_notify_event),
                      NULL);
  gtk_signal_connect (GTK_OBJECT (image_area), "button_release_event",
                      GTK_SIGNAL_FUNC (on_image_area_button_release_event),
                      NULL);

  return display;
}

GtkWidget*
create_window1 (void)
{
  GtkWidget *window1;

  window1 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_name (window1, "window1");
  gtk_object_set_data (GTK_OBJECT (window1), "window1", window1);
  gtk_window_set_title (GTK_WINDOW (window1), "window1");

  return window1;
}

